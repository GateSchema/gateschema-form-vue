{"version":3,"file":"index.js","sources":["../../src/createForm.js","../../src/store.js"],"sourcesContent":["import defaultTransformer from 'gateschema-transformer'\n\nfunction debounce(func, wait) {\n  let tId\n  return function() {\n    clearTimeout(tId)\n    tId = setTimeout(() => {\n      tId = null\n      func.apply(this, arguments)\n    }, wait)\n  }\n}\n\nexport function createDForm(options = {}) {\n  const { StateForm, transformer = defaultTransformer, vuexModuleName = 'form' } = options\n\n  return {\n    data() {\n      return {\n        activePaths: {},\n        validationOptions: {\n          skipAsync: true,\n          useCache: true,\n        },\n        pathValidationOptions: {},\n        // formState: null,\n        // cache: {}\n        // errors: []\n      }\n    },\n    props: {\n      schema: {\n        type: Object\n      },\n      value: {},\n      name: {},\n      debounce: {\n        type: Number\n      },\n      ignoreErrors: {\n        type: Object,\n        default() {\n          return {\n            map: true,\n            list: true\n          }\n        }\n      }\n    },\n    methods: {\n      setValueOfFormPath(path, value, parentValue, key) {\n        if (path === '/') {\n          this.$emit('input', value)\n        } else {\n          this.$parent.$set(parentValue, key, value)\n        }\n      },\n      transformNode(node, parentNode) {\n        const { activePaths, ignoreErrors } = this\n        const {path, error, value, constraints} = node\n        const {type, other = {}} = constraints\n        const form = other.form || {}\n\n        if (form.hidden) {\n          return\n        }\n        let errorMsg\n\n        // collect error\n        if (error && !ignoreErrors[error.keyword]) {\n          this.errors.push([path, error])\n          errorMsg = error.msg\n        }\n\n        const formItem =  Object.assign({}, form, {\n          path,\n          required: constraints.required,\n          error: (activePaths[path] && errorMsg) || undefined,\n          value,\n          children: node.children,\n          option: constraints.option\n        })\n\n\n        const componentMap = {\n          list: 'List',\n          map: 'Map',\n          string: 'Input',\n          number: 'InputNumber',\n          boolean: 'Switch',\n          enumList: 'Checkbox',\n          enum: 'Radio'\n        }\n\n        let component = formItem.component || (path === '/' ? 'Form' :  componentMap[type])\n\n\n        if (component === 'Select' && type === 'enumList') {\n          formItem.multiple = true\n        }\n\n        if (!formItem.label && parentNode && parentNode.constraints.type !== 'list') {\n          formItem.label = path.slice(path.lastIndexOf('/') + 1)\n        }\n\n        formItem.component = component\n\n        this.cache[path] = {\n          type,\n          item: formItem\n        }\n        return formItem\n      },\n      setFormState(formState) {\n        this.formState = formState\n        this.$forceUpdate()\n      },\n      updateValue(path, value, noDebounce) {\n        const rootData = this.value\n        const keys = path.split('/').slice(1)\n        const length = keys.length\n        if (length === 0) {\n          return this.setValueOfFormPath('/', value)\n        }\n        let target = rootData || {}\n        if (target !== rootData) {\n          this.setValueOfFormPath('/', target)\n        }\n\n        const lastIndex = length - 1\n        let currentPath = ''\n        for(let i = 0; i < length; i++) {\n          const key = keys[i]\n          currentPath += ('/' + key)\n          if (i < lastIndex) {\n            let child = target[key]\n            if (child == null || typeof child !== 'object') {\n              child = this.cache[currentPath].type === 'list' ? [] : {}\n              this.setValueOfFormPath(currentPath, child, target, key)\n            }\n            target = child\n          } else {\n            this.setValueOfFormPath(currentPath, value, target, key)\n          }\n        }\n        this.$nextTick(() => {\n          return noDebounce ? this.renderSchema() : this.renderSchemaDebounced()\n        })\n      },\n      handleUserInput(path, value, index) {\n        let noDebounce = false\n        const type = this.cache[path].type\n        if (type === 'string' && value === '') {\n          value = undefined\n        } else if (type === 'list') {\n          noDebounce = true\n          if (typeof index !== 'undefined') {\n            const activePaths = this.activePaths\n            const newActivePaths = {}\n            const activePathsOfOldValue = []\n            const prefix = path + '/'\n            Object.keys(activePaths).forEach(key => {\n              if (key.indexOf(prefix) === 0) {\n                activePathsOfOldValue.push(key)\n              } else {\n                newActivePaths[key] = true\n              }\n            })\n            const regex = new RegExp('^' + path + '\\\\/(\\\\d)(\\\\/.*)?')\n            let match\n            let idx\n            let appendix\n            activePathsOfOldValue.forEach(oldKey => {\n              match = oldKey.match(regex)\n              idx = ~~match[1]\n              appendix = match[2] || ''\n              if (idx < index) {\n                newActivePaths[oldKey] = true\n              } else if (idx > index) {\n                newActivePaths[prefix + (idx - 1) + appendix] = true\n              }\n            })\n            this.activePaths = newActivePaths\n          }\n        }\n        this.activePaths[path] = true\n        this.pathValidationOptions = {\n          [path]: {\n            skipAsync: false\n          }\n        }\n        this.updateValue(path, value, noDebounce)\n      },\n      handleSubmit() {\n        const activePaths = this.activePaths\n        Object.keys(this.cache).forEach(key => {\n          activePaths[key] = true\n        })\n        this.renderSchema(() => {\n          if (this.errors.length === 0) {\n            this.$emit('submit')\n          }\n        })\n      },\n      handleReset() {\n        this.$emit('reset')\n      },\n      renderSchema(cb) {\n        this.errors = []\n        this.cache = {}\n        const options = {\n          path: '/',\n          value: this.value,\n          rootData: this.value,\n          validationOptions: this.validationOptions,\n          pathValidationOptions: this.pathValidationOptions,\n          transform: this.transformNode,\n        }\n        transformer.transform(this.schema, options, (formState) => {\n          this.setFormState(formState)\n          return cb && cb()\n        })\n      },\n    },\n    render(h) {\n      return h(StateForm, {\n        props: {\n          state: this.formState,\n        },\n        on: {\n          submit: this.handleSubmit,\n          reset: this.handleReset,\n          input: this.handleUserInput\n        }\n      }, this.$slots.default)\n    },\n    created() {\n      if (this.name) {\n        const name = this.name\n        const mutationsName = vuexModuleName + '/setValueOfFormPath'\n        this.setValueOfFormPath = function(path, value, parentValue, key) {\n          this.$store.commit(mutationsName, {\n            name,\n            path,\n            value,\n            parentValue,\n            key\n          })\n        }\n      }\n\n      this.$watch('schema', {\n        handler: this.renderSchema\n      })\n\n      this.renderSchemaDebounced = this.debounce \n        ? debounce(this.renderSchema, this.debounce) \n        : this.renderSchema\n      \n      if (this.schema) {\n        this.renderSchemaDebounced()\n      }\n    }\n  }\n}\n\nexport default createDForm\n","import Vue from 'vue'\n\nconst state = {}\nconst mutations = {\n  setValueOfFormPath(state, {name, path, value, parentValue, key}) {\n    if (path === '/') {\n      Vue.set(state, name, value)\n    } else {\n      Vue.set(parentValue, key, value)\n    }\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations\n}"],"names":["debounce","func","wait","tId","clearTimeout","setTimeout","apply","arguments","createDForm","options","StateForm","transformer","defaultTransformer","vuexModuleName","data","activePaths","validationOptions","skipAsync","useCache","pathValidationOptions","props","schema","type","Object","value","name","Number","ignoreErrors","default","map","list","methods","setValueOfFormPath","path","parentValue","key","$emit","$parent","$set","transformNode","node","parentNode","error","constraints","other","form","hidden","errorMsg","keyword","errors","push","msg","formItem","assign","required","undefined","children","option","componentMap","string","number","boolean","enumList","enum","component","multiple","label","slice","lastIndexOf","cache","item","setFormState","formState","$forceUpdate","updateValue","noDebounce","rootData","keys","split","length","target","lastIndex","currentPath","i","child","$nextTick","renderSchema","renderSchemaDebounced","handleUserInput","index","newActivePaths","activePathsOfOldValue","prefix","forEach","indexOf","regex","RegExp","match","idx","appendix","oldKey","handleSubmit","handleReset","cb","transform","render","h","state","on","submit","reset","input","$slots","created","mutationsName","$store","commit","$watch","handler","mutations","Vue","set","namespaced"],"mappings":"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"}