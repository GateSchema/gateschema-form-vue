{"version":3,"file":"index.js","sources":["../../src/createForm.js","../../src/store.js"],"sourcesContent":["import defaultTransformer from 'gateschema-transformer'\r\n\r\nfunction debounce(func, wait) {\r\n  let tId\r\n  return function() {\r\n    clearTimeout(tId)\r\n    tId = setTimeout(() => {\r\n      tId = null\r\n      func.apply(this, arguments)\r\n    }, wait)\r\n  }\r\n}\r\n\r\nexport function createDForm(options = {}) {\r\n  const { StateForm, transformer = defaultTransformer, vuexModuleName = 'form' } = options\r\n\r\n  return {\r\n    data() {\r\n      return {\r\n        activePaths: {},\r\n        validationOptions: {\r\n          skipAsync: true,\r\n          useCache: true,\r\n        },\r\n        submitValidationOptions: {\r\n          useCache: true\r\n        },\r\n        pathValidationOptions: {},\r\n        // formState: null,\r\n        // cache: {}\r\n        // errors: []\r\n      }\r\n    },\r\n    props: {\r\n      schema: {\r\n        type: Object\r\n      },\r\n      value: {},\r\n      name: {},\r\n      debounce: {\r\n        type: Number\r\n      },\r\n      ignoreErrors: {\r\n        type: Object,\r\n        default() {\r\n          return {\r\n            map: true,\r\n            list: true\r\n          }\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      setValueOfFormPath(path, value, parentValue, key) {\r\n        if (path === '/') {\r\n          this.$emit('input', value)\r\n        } else {\r\n          this.$parent.$set(parentValue, key, value)\r\n        }\r\n      },\r\n      transformNode(node, parentNode) {\r\n        const { activePaths, ignoreErrors } = this\r\n        const {path, error, value, constraints} = node\r\n        const {type, other = {}} = constraints\r\n        const form = other.form || {}\r\n\r\n        if (form.hidden) {\r\n          return\r\n        }\r\n        let errorMsg\r\n\r\n        // collect error\r\n        if (error && !ignoreErrors[error.keyword]) {\r\n          this.errors.push(error)\r\n          errorMsg = error.msg\r\n        }\r\n\r\n        const formItem =  Object.assign({}, form, {\r\n          path,\r\n          required: constraints.required,\r\n          error: (activePaths[path] && errorMsg) || undefined,\r\n          value,\r\n          children: node.children,\r\n          option: constraints.option\r\n        })\r\n\r\n\r\n        const componentMap = {\r\n          list: 'List',\r\n          map: 'Map',\r\n          string: 'Input',\r\n          number: 'InputNumber',\r\n          boolean: 'Switch',\r\n          enumList: 'Checkbox',\r\n          enum: 'Radio'\r\n        }\r\n\r\n        let component = formItem.component || (path === '/' ? 'Form' :  componentMap[type])\r\n\r\n\r\n        if (component === 'Select' && type === 'enumList') {\r\n          formItem.multiple = true\r\n        }\r\n\r\n        if (!formItem.label && parentNode && parentNode.constraints.type !== 'list') {\r\n          formItem.label = path.slice(path.lastIndexOf('/') + 1)\r\n        }\r\n\r\n        formItem.component = component\r\n\r\n        this.cache[path] = {\r\n          type,\r\n          item: formItem\r\n        }\r\n        return formItem\r\n      },\r\n      setFormState(formState) {\r\n        this.formState = formState\r\n        this.$forceUpdate()\r\n      },\r\n      updateValue(path, value, noDebounce) {\r\n        const rootData = this.value\r\n        const keys = path.split('/').slice(1)\r\n        const length = keys.length\r\n        if (length === 0) {\r\n          return this.setValueOfFormPath('/', value)\r\n        }\r\n        let target = rootData || {}\r\n        if (target !== rootData) {\r\n          this.setValueOfFormPath('/', target)\r\n        }\r\n\r\n        const lastIndex = length - 1\r\n        let currentPath = ''\r\n        for(let i = 0; i < length; i++) {\r\n          const key = keys[i]\r\n          currentPath += ('/' + key)\r\n          if (i < lastIndex) {\r\n            let child = target[key]\r\n            if (child == null || typeof child !== 'object') {\r\n              child = this.cache[currentPath].type === 'list' ? [] : {}\r\n              this.setValueOfFormPath(currentPath, child, target, key)\r\n            }\r\n            target = child\r\n          } else {\r\n            this.setValueOfFormPath(currentPath, value, target, key)\r\n          }\r\n        }\r\n        this.$nextTick(() => {\r\n          const options = {\r\n            cb: () => {\r\n              this.$emit('update', this.errors)\r\n            }\r\n          }\r\n          return noDebounce ? this.renderSchema(options) : this.renderSchemaDebounced(options)\r\n        })\r\n      },\r\n      handleUserInput(path, value, index) {\r\n        let noDebounce = false\r\n        const type = this.cache[path].type\r\n        if (type === 'string' && value === '') {\r\n          value = undefined\r\n        } else if (type === 'list') {\r\n          noDebounce = true\r\n          if (typeof index !== 'undefined') {\r\n            const activePaths = this.activePaths\r\n            const newActivePaths = {}\r\n            const activePathsOfOldValue = []\r\n            const prefix = path + '/'\r\n            Object.keys(activePaths).forEach(key => {\r\n              if (key.indexOf(prefix) === 0) {\r\n                activePathsOfOldValue.push(key)\r\n              } else {\r\n                newActivePaths[key] = true\r\n              }\r\n            })\r\n            const regex = new RegExp('^' + path + '\\\\/(\\\\d)(\\\\/.*)?')\r\n            let match\r\n            let idx\r\n            let appendix\r\n            activePathsOfOldValue.forEach(oldKey => {\r\n              match = oldKey.match(regex)\r\n              idx = ~~match[1]\r\n              appendix = match[2] || ''\r\n              if (idx < index) {\r\n                newActivePaths[oldKey] = true\r\n              } else if (idx > index) {\r\n                newActivePaths[prefix + (idx - 1) + appendix] = true\r\n              }\r\n            })\r\n            this.activePaths = newActivePaths\r\n          }\r\n        }\r\n        this.activePaths[path] = true\r\n        this.pathValidationOptions = {\r\n          [path]: {\r\n            skipAsync: false\r\n          }\r\n        }\r\n        this.updateValue(path, value, noDebounce)\r\n      },\r\n      handleSubmit() {\r\n        const activePaths = this.activePaths\r\n        Object.keys(this.cache).forEach(key => {\r\n          activePaths[key] = true\r\n        })\r\n        this.renderSchema({\r\n          validationOptions: this.submitValidationOptions,\r\n          cb: () => {\r\n            this.$emit('submit', this.errors)\r\n          }\r\n        })\r\n      },\r\n      handleReset() {\r\n        this.$emit('reset')\r\n      },\r\n      renderSchema(options={}) {\r\n        const {cb,\r\n          validationOptions = this.validationOptions,\r\n          pathValidationOptions = this.pathValidationOptions\r\n        } = options\r\n        this.errors = []\r\n        this.cache = {}\r\n        const transformOptions = {\r\n          path: '/',\r\n          value: this.value,\r\n          rootData: this.value,\r\n          validationOptions,\r\n          pathValidationOptions,\r\n          transform: this.transformNode,\r\n        }\r\n        transformer.transform(this.schema, transformOptions, (formState) => {\r\n          this.setFormState(formState)\r\n          return cb && cb()\r\n        })\r\n      },\r\n    },\r\n    render(h) {\r\n      return h(StateForm, {\r\n        props: {\r\n          state: this.formState,\r\n        },\r\n        on: {\r\n          submit: this.handleSubmit,\r\n          reset: this.handleReset,\r\n          input: this.handleUserInput\r\n        }\r\n      }, this.$slots.default)\r\n    },\r\n    created() {\r\n      if (this.name) {\r\n        const name = this.name\r\n        const mutationsName = vuexModuleName + '/setValueOfFormPath'\r\n        this.setValueOfFormPath = function(path, value, parentValue, key) {\r\n          this.$store.commit(mutationsName, {\r\n            name,\r\n            path,\r\n            value,\r\n            parentValue,\r\n            key\r\n          })\r\n        }\r\n      }\r\n\r\n      this.$watch('schema', {\r\n        handler: this.renderSchema\r\n      })\r\n\r\n      this.$watch('value', {\r\n        handler: this.renderSchema\r\n      })\r\n\r\n      this.renderSchemaDebounced = this.debounce \r\n        ? debounce(this.renderSchema, this.debounce) \r\n        : this.renderSchema\r\n      \r\n      if (this.schema) {\r\n        this.renderSchemaDebounced()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default createDForm\r\n","import Vue from 'vue'\r\n\r\nconst state = {}\r\nconst mutations = {\r\n  setValueOfFormPath(state, {name, path, value, parentValue, key}) {\r\n    if (path === '/') {\r\n      Vue.set(state, name, value)\r\n    } else {\r\n      Vue.set(parentValue, key, value)\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations\r\n}"],"names":["debounce","func","wait","tId","clearTimeout","setTimeout","apply","arguments","createDForm","options","StateForm","transformer","defaultTransformer","vuexModuleName","data","activePaths","validationOptions","skipAsync","useCache","submitValidationOptions","pathValidationOptions","props","schema","type","Object","value","name","Number","ignoreErrors","default","map","list","methods","setValueOfFormPath","path","parentValue","key","$emit","$parent","$set","transformNode","node","parentNode","error","constraints","other","form","hidden","errorMsg","keyword","errors","push","msg","formItem","assign","required","undefined","children","option","componentMap","string","number","boolean","enumList","enum","component","multiple","label","slice","lastIndexOf","cache","item","setFormState","formState","$forceUpdate","updateValue","noDebounce","rootData","keys","split","length","target","lastIndex","currentPath","i","child","$nextTick","cb","renderSchema","renderSchemaDebounced","handleUserInput","index","newActivePaths","activePathsOfOldValue","prefix","forEach","indexOf","regex","RegExp","match","idx","appendix","oldKey","handleSubmit","handleReset","transformOptions","transform","render","h","state","on","submit","reset","input","$slots","created","mutationsName","$store","commit","$watch","handler","mutations","Vue","set","namespaced"],"mappings":"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"}