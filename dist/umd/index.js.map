{"version":3,"file":"index.js","sources":["../../src/store.js","../../src/createForm.js"],"sourcesContent":["import Vue from 'vue'\n\nconst state = {}\nconst mutations = {\n  setValueOfFormPath(state, {name, path, value, parentValue, key}) {\n    if (path === '/') {\n      Vue.set(state, name, value)\n    } else {\n      Vue.set(parentValue, key, value)\n    }\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations\n}","import defaultTransformer from 'gateschema-transformer'\n\nfunction debounce(func, wait) {\n  let tId\n  return function() {\n    clearTimeout(tId)\n    tId = setTimeout(() => {\n      tId = null\n      func.apply(this, arguments)\n    }, wait)\n  }\n}\n\nexport function createDForm(options = {}) {\n  const { StateForm, transformer = defaultTransformer, vuexModuleName = 'form' } = options\n\n  return {\n    data() {\n      return {\n        activePaths: {},\n        validationOptions: {\n          skipAsync: true\n        },\n        pathValidationOptions: {},\n        // formState: null,\n        // cache: {}\n        // errors: []\n      }\n    },\n    props: {\n      schema: {\n        type: Object\n      },\n      value: {},\n      name: {},\n      debounce: {\n        type: Number\n      },\n      ignoreErrors: {\n        type: Object,\n        default() {\n          return {\n            map: true,\n            list: true\n          }\n        }\n      }\n    },\n    methods: {\n      setValueOfFormPath(path, value, parentValue, key) {\n        if (path === '/') {\n          this.$emit('input', value)\n        } else {\n          this.$parent.$set(parentValue, key, value)\n        }\n      },\n      transformNode(node, parentNode) {\n        const { activePaths, ignoreErrors } = this\n        const {path, error, value, constraints} = node\n        const {type, other = {}} = constraints\n        const form = other.form || {}\n\n        if (form.hidden) {\n          return\n        }\n        let errorMsg\n\n        // collect error\n        if (error && !ignoreErrors[error.keyword]) {\n          this.errors.push([path, error])\n          errorMsg = error.msg\n        }\n\n        const formItem =  Object.assign({}, form, {\n          path,\n          required: constraints.required,\n          error: (activePaths[path] && errorMsg) || undefined,\n          value,\n          children: node.children,\n          option: constraints.option\n        })\n\n\n        const componentMap = {\n          list: 'List',\n          map: 'Map',\n          string: 'Input',\n          number: 'InputNumber',\n          boolean: 'Switch',\n          enumList: 'Checkbox',\n          enum: 'Radio'\n        }\n\n        let component = formItem.component || (path === '/' ? 'Form' :  componentMap[type])\n\n\n        if (component === 'Select' && type === 'enumList') {\n          formItem.multiple = true\n        }\n\n        if (!formItem.label && parentNode && parentNode.constraints.type !== 'list') {\n          formItem.label = path.slice(path.lastIndexOf('/') + 1)\n        }\n\n        formItem.component = component\n\n        this.cache[path] = {\n          type,\n          item: formItem\n        }\n        return formItem\n      },\n      setFormState(formState) {\n        this.formState = formState\n        this.$forceUpdate()\n      },\n      updateValue(path, value, noDebounce) {\n        const rootData = this.value\n        const keys = path.split('/').slice(1)\n        const length = keys.length\n        if (length === 0) {\n          return this.setValueOfFormPath('/', value)\n        }\n        let target = rootData || {}\n        if (target !== rootData) {\n          this.setValueOfFormPath('/', target)\n        }\n\n        const lastIndex = length - 1\n        let currentPath = ''\n        for(let i = 0; i < length; i++) {\n          const key = keys[i]\n          currentPath += ('/' + key)\n          if (i < lastIndex) {\n            let child = target[key]\n            if (child == null || typeof child !== 'object') {\n              child = this.cache[currentPath].type === 'list' ? [] : {}\n              this.setValueOfFormPath(currentPath, child, target, key)\n            }\n            target = child\n          } else {\n            this.setValueOfFormPath(currentPath, value, target, key)\n          }\n        }\n        this.$nextTick(() => {\n          return noDebounce ? this.renderSchema() : this.renderSchemaDebounced()\n        })\n      },\n      handleUserInput(path, value, index) {\n        let noDebounce = false\n        const type = this.cache[path].type\n        if (type === 'string' && value === '') {\n          value = undefined\n        } else if (type === 'list') {\n          noDebounce = true\n          if (typeof index !== 'undefined') {\n            const activePaths = this.activePaths\n            const newActivePaths = {}\n            const activePathsOfOldValue = []\n            const prefix = path + '/'\n            Object.keys(activePaths).forEach(key => {\n              if (key.indexOf(prefix) === 0) {\n                activePathsOfOldValue.push(key)\n              } else {\n                newActivePaths[key] = true\n              }\n            })\n            const regex = new RegExp('^' + path + '\\\\/(\\\\d)(\\\\/.*)?')\n            let match\n            let idx\n            let appendix\n            activePathsOfOldValue.forEach(oldKey => {\n              match = oldKey.match(regex)\n              idx = ~~match[1]\n              appendix = match[2] || ''\n              if (idx < index) {\n                newActivePaths[oldKey] = true\n              } else if (idx > index) {\n                newActivePaths[prefix + (idx - 1) + appendix] = true\n              }\n            })\n            this.activePaths = newActivePaths\n          }\n        }\n        this.activePaths[path] = true\n        this.pathValidationOptions = {\n          [path]: {\n            skipAsync: false\n          }\n        }\n        this.updateValue(path, value, noDebounce)\n      },\n      handleSubmit() {\n        const activePaths = this.activePaths\n        Object.keys(this.cache).forEach(key => {\n          activePaths[key] = true\n        })\n        this.renderSchema(() => {\n          if (this.errors.length === 0) {\n            this.$emit('submit')\n          }\n        })\n      },\n      handleReset() {\n        this.$emit('reset')\n      },\n      renderSchema(cb) {\n        this.errors = []\n        this.cache = {}\n        const options = {\n          path: '/',\n          value: this.value,\n          rootData: this.value,\n          validationOptions: this.validationOptions,\n          pathValidationOptions: this.pathValidationOptions,\n          transform: this.transformNode,\n        }\n        transformer.transform(this.schema, options, (formState) => {\n          this.setFormState(formState)\n          return cb && cb()\n        })\n      },\n    },\n    render(h) {\n      return h(StateForm, {\n        props: {\n          state: this.formState,\n        },\n        on: {\n          submit: this.handleSubmit,\n          reset: this.handleReset,\n          input: this.handleUserInput\n        }\n      }, this.$slots.default)\n    },\n    created() {\n      if (this.name) {\n        const name = this.name\n        const mutationsName = vuexModuleName + '/setValueOfFormPath'\n        this.setValueOfFormPath = function(path, value, parentValue, key) {\n          this.$store.commit(mutationsName, {\n            name,\n            path,\n            value,\n            parentValue,\n            key\n          })\n        }\n      }\n\n      this.$watch('schema', {\n        handler: this.renderSchema\n      })\n\n      this.renderSchemaDebounced = this.debounce \n        ? debounce(this.renderSchema, this.debounce) \n        : this.renderSchema\n      \n      if (this.schema) {\n        this.renderSchemaDebounced()\n      }\n    }\n  }\n}\n\nexport default createDForm\n"],"names":["namespaced","state","mutations","setValueOfFormPath","name","path","value","parentValue","key","Vue","set","options","StateForm","transformer","defaultTransformer","vuexModuleName","data","activePaths","validationOptions","skipAsync","pathValidationOptions","props","schema","type","Object","debounce","Number","ignoreErrors","default","map","list","methods","$emit","$parent","$set","transformNode","node","parentNode","this","error","constraints","other","form","hidden","errorMsg","keyword","errors","push","msg","formItem","assign","required","undefined","children","option","component","string","number","boolean","enumList","enum","multiple","label","slice","lastIndexOf","cache","item","setFormState","formState","$forceUpdate","updateValue","noDebounce","rootData","keys","split","length","target","lastIndex","currentPath","i","child","_typeof","$nextTick","_this2","renderSchema","renderSchemaDebounced","handleUserInput","index","newActivePaths","activePathsOfOldValue","prefix","forEach","indexOf","match","idx","appendix","regex","RegExp","oldKey","handleSubmit","_this3","handleReset","cb","transform","_this4","render","h","on","submit","reset","input","$slots","created","mutationsName","$store","commit","func","wait","tId","$watch","handler","clearTimeout","setTimeout","apply","_this","arguments"],"mappings":"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"}